"""base

Revision ID: bf76f26c0c7f
Revises: 
Create Date: 2025-07-21 22:54:52.150111

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bf76f26c0c7f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('oauth_provider', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('token_uri', sa.String(), nullable=False),
    sa.Column('scopes', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('calendar_channels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('resource_id', sa.String(), nullable=False),
    sa.Column('calendar_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('client_token', sa.String(), nullable=True),
    sa.Column('expiration_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('resource_id')
    )
    op.create_table('calendar_sync_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('calendar_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('sync_token', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('calendar_id', 'user_id', name='_user_calendar_sync_token_uc'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_calendar_sync_tokens_calendar_id'), 'calendar_sync_tokens', ['calendar_id'], unique=True)
    op.create_index(op.f('ix_calendar_sync_tokens_user_id'), 'calendar_sync_tokens', ['user_id'], unique=False)
    op.create_table('meetings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('meeting_url', sa.String(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('google_event_id', sa.String(), nullable=True),
    sa.Column('calendar_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('recordings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_name'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('meeting_id')
    )
    op.create_table('summaries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('summary_text', sa.Text(), nullable=False),
    sa.Column('transcript', sa.Text(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('meeting_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('summaries')
    op.drop_table('recordings')
    op.drop_table('meetings')
    op.drop_index(op.f('ix_calendar_sync_tokens_user_id'), table_name='calendar_sync_tokens')
    op.drop_index(op.f('ix_calendar_sync_tokens_calendar_id'), table_name='calendar_sync_tokens')
    op.drop_table('calendar_sync_tokens')
    op.drop_table('calendar_channels')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
